/**
 *  @mainpage
 *  @todo Fix Makefile
 *  @todo Add release binaries to releases
 *  @todo Add project description to main page
 *  - Finish the description of the project
 *  @todo Add instructions to main page
 *  - Finish compilation instructions
 *  - Add usage instructions
 *  - Add example code in C++ and Java
 *
 *  @tableofcontents
 *  @section about About this project
 *  This is <a href="http://ai-robotics.com.au/">FRC team 4529</a>'s vision system, built by Andrew Silver.
 *  @n It is built in C++, and uses OpenCV 2.4 (http://opencv.org/).
 *  @n It is very high performance, reliable, is platform-independant, and is simple to use in C, C++ and Java. It can run on both the driver station, <b>and even on the RoboRIO itself!</b>
 *  @n The system will pick up the tote markers from a frame source, and will report the center X position of the marker, along with the rotation direction and the total width of the detected area (including space in between).
 *  @image html VisionRepresentation.svg "Vision Representation"
 *  @see rotation_t Rotation direction
 *  @see LineResult Output data from the vision system
 *
 *  @subsection download Download
 *  - Source: https://github.com/frc4529/2015-Vision
 *  - OpenCV: http://opencv.org/downloads.html
 *
 *  @section instructions Setting up the library
 *  @subsection installation Getting the library
 *  You can either:
 *  - (Fast/Newbie) Download a pre-compiled binary - @ref lazyass
 *  - (Slow/Veteran) Manually compile the library  - @ref compile
 *  @subsubsection compile Manual compilation
 *  -# Download/setup OpenCV 2.4.10 from http://opencv.org/downloads.html
 *  @attention Do @b NOT use 3.x, as the library is not currently compatable!
 *  @n If you wish to port it yourself, feel free!
 *  @note If you want to use this for the RoboRIO, you will need to compile OpenCV from source.
 *  @note Modify the ARM toolchain that comes with OpenCV, and use cmake - DO @b NOT USE frcmake!
 *  @n Instead, check the contents of the toolchain file it uses, and incorperate the changes into the OpenCV ARM toolchain.
 *
 *  -# Clone the library source source.
 *  @code{.sh}
 *  $ git clone https://github.com/frc4529/2015-Vision.git
 *  $ cd 2015-Vision/
 *  @endcode
 *
 *  -# Compile the code
 *  @code{.sh}
 *  $ make lib/strip
 *  @endcode
 *  @note frcmake will NOT work with this. frcmake is a cmake wrapper, we do not use cmake.
 *  -# Move on to @ref usage
 *
 *  @subsubsection lazyass Using a pre-compiled binary
 *  -# Go to https://github.com/frc4529/2015-Vision/releases and download the latest release.
 *  -# Move on to @ref usage
 *
 *  @section usage Using the library
 *  @subsection cppUsage C++ usage
 *  @subsubsection cppRoborio C++ on the RoboRIO
 *  See the example code for usage.
 *  @subsubsection cppDS C++ on the driver station
 *  See the example code for usage.
 *  @subsection javaUsage Java usage
 *  @subsubsection javaRoborio Java on the RoboRIO
 *  To have the code compile in eclipse, add this to the end of your project's build.properties file (open with a text editor):
 *  @code{.properties}
 *  wpilib=${user.home}/wpilib/java/${version}
 *  wpilib.lib=${wpilib}/lib
 *  wpilib.jar=${wpilib.lib}/WPILib.jar
 *  networktables.jar=${wpilib.lib}/NetworkTables.jar
 *  jna.jar=/full/path/to/jna.jar
 *  classpath=${wpilib.jar}:${networktables.jar}:${jna.jar}
 *  @endcode
 *  Change the @b jna.jar property (line 5) to the full path of the jna.jar file.
 *  @n For Windows, include the drive letter in the path for jna.jar - and ONLY jna.jar (E.g. @a "C:/path/to/jnalib.jar")
 *  @note If the project doesn't compile, reporting multiple errors similar to "Cannot find symbol" relating to Pointer, PointerType, jna, etc, you have set the path to the jar incorrectly.
 *  @note The file will most likely not be called jnalib.jar or jna.jar. Most of the time it is named jna-x.x.x.jar
 *  @attention Ensure you have set the @b FULL path to the JNA jar file, and you have included the full filename including the extension.
 *
 *  See the example code for usage.
 *  @subsubsection javaDS Java on the driver station
 *  See the example code for usage.
 *
 *  @author Andrew Silver - https://github.com/Silvea12/
 */
